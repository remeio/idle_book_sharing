<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xumengqi.reme.as.mapper.ShareRecordExtMapper">
    <resultMap id="BaseResultMap" type="com.xumengqi.reme.as.vo.ShareRecordVO">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="order_no" jdbcType="VARCHAR" property="orderNo"/>
        <result column="book_id" jdbcType="BIGINT" property="bookId"/>
        <result column="share_user_id" jdbcType="BIGINT" property="shareUserId"/>
        <result column="borrow_user_id" jdbcType="BIGINT" property="borrowUserId"/>
        <result column="record_status" jdbcType="INTEGER" property="recordStatus"/>
        <result column="score" jdbcType="DOUBLE" property="score"/>
        <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate"/>
        <result column="book_name" jdbcType="VARCHAR" property="bookName"/>
        <result column="book_image_url" jdbcType="VARCHAR" property="bookImageUrl"/>
        <result column="book_max_period" jdbcType="INTEGER" property="bookMaxPeriod"/>
        <result column="book_deposit" jdbcType="BIGINT" property="bookDeposit"/>
    </resultMap>

    <select id="selectByBorrowUserId" resultMap="BaseResultMap">
        SELECT s.*,
               b.book_name,
               b.book_image_url,
               b.book_max_period,
               b.book_deposit
        FROM share_record s
                 LEFT JOIN book b ON s.book_id = b.id
        where s.borrow_user_id = #{userId}
        order by id desc
    </select>
    <select id="selectByShareUserId" resultMap="BaseResultMap">
        SELECT s.*,
               b.book_name,
               b.book_image_url,
               b.book_max_period,
               b.book_deposit
        FROM share_record s
                 LEFT JOIN book b ON s.book_id = b.id
        where s.share_user_id = #{userId}
        order by id desc
    </select>
    <select id="selectById" resultMap="BaseResultMap">
        SELECT s.*,
               b.book_name,
               b.book_image_url,
               b.book_max_period,
               b.book_deposit
        FROM share_record s
                 LEFT JOIN book b ON s.book_id = b.id
        where s.id = #{id}
    </select>
    <select id="getBorrowRankList" resultType="com.xumengqi.reme.as.vo.RankVO">
        SELECT s.num            as number,
               s.user_id        as userId,
               u.user_full_name as userFullName
        FROM (
                 SELECT count(sr.borrow_user_id) AS num,
                        sr.borrow_user_id        AS user_id
                 FROM share_record sr
                 WHERE sr.record_status IN (3, 4)
                 GROUP BY sr.borrow_user_id
                 ORDER BY num DESC
                 LIMIT #{count}
             ) s
                 LEFT JOIN `user` u ON u.id = s.user_id
    </select>
    <select id="getShareRankList" resultType="com.xumengqi.reme.as.vo.RankVO">
        SELECT s.num            as number,
               s.user_id        as userId,
               u.user_full_name as userFullName
        FROM (
                 SELECT count(sr.share_user_id) AS num,
                        sr.share_user_id        AS user_id
                 FROM share_record sr
                 WHERE sr.record_status IN (3, 4)
                 GROUP BY sr.share_user_id
                 ORDER BY num DESC
                 LIMIT #{count}
             ) s
                 LEFT JOIN `user` u ON u.id = s.user_id
    </select>

    <select id="getBookSampleList" resultType="com.xumengqi.reme.as.util.recommend.BookSample">
        SELECT count(book_id) as count,
               a.borrow_user_id as userId,
               a.book_catalog_id as bookCatalogId
        FROM (
                 SELECT s.book_id,
                        s.borrow_user_id,
                        b.book_catalog_id
                 FROM (
                          SELECT book_id,
                                 borrow_user_id
                          FROM `share_record`
                          WHERE record_status IN (3, 4)) AS s,
                      book b
                 WHERE s.book_id = b.id
                   AND b.school_id = (SELECT u.school_id FROM `user` u WHERE u.id = #{userId})
             ) a
        GROUP BY a.borrow_user_id,
                 a.book_catalog_id
    </select>
</mapper>