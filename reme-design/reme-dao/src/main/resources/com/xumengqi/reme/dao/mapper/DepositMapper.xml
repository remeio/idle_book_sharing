<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xumengqi.reme.dao.mapper.DepositMapper">
  <resultMap id="BaseResultMap" type="com.xumengqi.reme.dao.entity.Deposit">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="deposit_order_no" jdbcType="VARCHAR" property="depositOrderNo" />
    <result column="deposit_amount" jdbcType="BIGINT" property="depositAmount" />
    <result column="deposit_operate_type" jdbcType="INTEGER" property="depositOperateType" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="inner_order_no" jdbcType="VARCHAR" property="innerOrderNo" />
    <result column="outer_order_no" jdbcType="VARCHAR" property="outerOrderNo" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, deposit_order_no, deposit_amount, deposit_operate_type, user_id, inner_order_no, 
    outer_order_no, gmt_create
  </sql>
  <select id="selectByExample" parameterType="com.xumengqi.reme.dao.entity.DepositExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from deposit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from deposit
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from deposit
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.xumengqi.reme.dao.entity.DepositExample">
    delete from deposit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xumengqi.reme.dao.entity.Deposit">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into deposit (deposit_order_no, deposit_amount, deposit_operate_type, 
      user_id, inner_order_no, outer_order_no, 
      gmt_create)
    values (#{depositOrderNo,jdbcType=VARCHAR}, #{depositAmount,jdbcType=BIGINT}, #{depositOperateType,jdbcType=INTEGER}, 
      #{userId,jdbcType=BIGINT}, #{innerOrderNo,jdbcType=VARCHAR}, #{outerOrderNo,jdbcType=VARCHAR}, 
      #{gmtCreate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.xumengqi.reme.dao.entity.Deposit">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into deposit
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="depositOrderNo != null">
        deposit_order_no,
      </if>
      <if test="depositAmount != null">
        deposit_amount,
      </if>
      <if test="depositOperateType != null">
        deposit_operate_type,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="innerOrderNo != null">
        inner_order_no,
      </if>
      <if test="outerOrderNo != null">
        outer_order_no,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="depositOrderNo != null">
        #{depositOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="depositAmount != null">
        #{depositAmount,jdbcType=BIGINT},
      </if>
      <if test="depositOperateType != null">
        #{depositOperateType,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="innerOrderNo != null">
        #{innerOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="outerOrderNo != null">
        #{outerOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xumengqi.reme.dao.entity.DepositExample" resultType="java.lang.Long">
    select count(*) from deposit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update deposit
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.depositOrderNo != null">
        deposit_order_no = #{record.depositOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.depositAmount != null">
        deposit_amount = #{record.depositAmount,jdbcType=BIGINT},
      </if>
      <if test="record.depositOperateType != null">
        deposit_operate_type = #{record.depositOperateType,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.innerOrderNo != null">
        inner_order_no = #{record.innerOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.outerOrderNo != null">
        outer_order_no = #{record.outerOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update deposit
    set id = #{record.id,jdbcType=BIGINT},
      deposit_order_no = #{record.depositOrderNo,jdbcType=VARCHAR},
      deposit_amount = #{record.depositAmount,jdbcType=BIGINT},
      deposit_operate_type = #{record.depositOperateType,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=BIGINT},
      inner_order_no = #{record.innerOrderNo,jdbcType=VARCHAR},
      outer_order_no = #{record.outerOrderNo,jdbcType=VARCHAR},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xumengqi.reme.dao.entity.Deposit">
    update deposit
    <set>
      <if test="depositOrderNo != null">
        deposit_order_no = #{depositOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="depositAmount != null">
        deposit_amount = #{depositAmount,jdbcType=BIGINT},
      </if>
      <if test="depositOperateType != null">
        deposit_operate_type = #{depositOperateType,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="innerOrderNo != null">
        inner_order_no = #{innerOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="outerOrderNo != null">
        outer_order_no = #{outerOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xumengqi.reme.dao.entity.Deposit">
    update deposit
    set deposit_order_no = #{depositOrderNo,jdbcType=VARCHAR},
      deposit_amount = #{depositAmount,jdbcType=BIGINT},
      deposit_operate_type = #{depositOperateType,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=BIGINT},
      inner_order_no = #{innerOrderNo,jdbcType=VARCHAR},
      outer_order_no = #{outerOrderNo,jdbcType=VARCHAR},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>